{"version":3,"sources":["PokeHeader/PokeHeader.tsx","utils.tsx","PokeDetail/PokeDetail.tsx","PokeListItem/PokeListItem.tsx","PokeList/PokeList.tsx","PokeSearch/PokeSearch.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PokeHeader","className","BASE_URL","PokeDetail","pokemonNumber","useState","pokemonName","setPokemonName","pokemonSpriteUrl","setPokeSpriteUrl","useEffect","fetch","then","response","json","data","sprites","front_default","name","PokeListItem","selectedPokemon","setSelectedPokemon","searchText","pokemonSpriteURL","setPokemonSpriteURL","pokemonId","setPokemonId","isLoading","setIsLoading","id","text","src","process","alt","includes","onClick","length","toUpperCase","slice","toLowerCase","PokeList","pokemonList","setPokemonList","results","listPokemon","map","pokemon","index","PokeSearch","setSearchText","type","placeholder","onChange","e","target","value","handleChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e48d8bdc.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\n\nconst PokeHeader = (): ReactElement => {\n  return (\n    <header className=\"text-4xl text-center py-6\">\n      <h1>Pokédex</h1>\n    </header>\n  );\n};\n\nexport default PokeHeader;\n","export const BASE_URL = \"https://pokeapi.co/api/v2/\";\nexport const NUMBER_OF_POKEMON_TOTAL = 898;\nexport const NUMBER_OF_POKEMON_GEN1 = 151;\nexport const NUMBER_OF_POKEMON_GEN2 = 100;\nexport const NUMBER_OF_POKEMON_GEN3 = 135;\nexport const NUMBER_OF_POKEMON_GEN4 = 107;\nexport const NUMBER_OF_POKEMON_GEN5 = 156;\nexport const NUMBER_OF_POKEMON_GEN6 = 72;\nexport const NUMBER_OF_POKEMON_GEN7 = 88;\nexport const NUMBER_OF_POKEMON_GEN8 = 89;\n\nexport interface BasicPokemon {\n  name: string;\n  url: string;\n}\n\n/**\n * Capitalizes a string by uppercasing the first letter and\n * lowercasing the rest. Returns an empty string if given\n * an empty string.\n * @param text A word or string to be capitalized.\n * @returns A capitalized version of the input string.\n */\nexport const capitalize = (text: string): string => {\n  if (text === \"\") return \"\";\n  if (text.length === 1) return text.toUpperCase();\n  return (\n    text.slice(0, 1).toUpperCase() + text.slice(1, text.length).toLowerCase()\n  );\n};\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { BASE_URL } from \"../utils\";\n\ninterface Props {\n  pokemonNumber: number;\n}\n\nconst PokeDetail = ({ pokemonNumber }: Props): ReactElement => {\n  const [pokemonName, setPokemonName] = useState<string>(\"\");\n  const [pokemonSpriteUrl, setPokeSpriteUrl] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetch(`${BASE_URL}pokemon/${pokemonNumber}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokeSpriteUrl(data.sprites.front_default);\n        setPokemonName(data.name);\n      });\n  }, [pokemonNumber]);\n\n  return (\n    <div>\n      {pokemonName} - {pokemonSpriteUrl}\n    </div>\n  );\n};\n\nexport default PokeDetail;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { BASE_URL, capitalize } from \"../utils\";\n\ntype SetSelectedPokemon = (pokemonNumber: number) => void;\n\ninterface Props {\n  pokemonName: string;\n  pokemonNumber: number;\n  selectedPokemon: number;\n  setSelectedPokemon: SetSelectedPokemon;\n  searchText: string;\n}\n\nconst PokeListItem = ({\n  pokemonName,\n  pokemonNumber,\n  selectedPokemon,\n  setSelectedPokemon,\n  searchText,\n}: Props): ReactElement => {\n  const [pokemonSpriteURL, setPokemonSpriteURL] = useState<string>(\"\");\n  const [pokemonId, setPokemonId] = useState<number>(pokemonNumber);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    fetch(`${BASE_URL}pokemon/${pokemonNumber}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokemonSpriteURL(data.sprites.front_default);\n        setPokemonId(data.id);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const handleClick = () => {\n    selectedPokemon === pokemonNumber\n      ? setSelectedPokemon(0)\n      : setSelectedPokemon(pokemonNumber);\n  };\n\n  return isLoading ? (\n    <img\n      src={process.env.PUBLIC_URL + \"/logo64.png\"}\n      alt=\"Loading...\"\n      className=\"animate-spin\"\n    ></img>\n  ) : pokemonName.includes(searchText) ? (\n    <section className=\"border-2 rounded-md shadow-md flex justify-center flex-col items-center hover:border-purple-500 transition-colors\">\n      <div className=\"relative w-28 h-28 flex justify-center items-center\">\n        <div className=\"w-24 h-24 rounded-full bg-gray-200 absolute\"></div>\n        {pokemonSpriteURL ? (\n          <img\n            src={pokemonSpriteURL}\n            alt={pokemonName}\n            onClick={handleClick}\n            className=\"absolute w-24 h-24\"\n          ></img>\n        ) : null}\n      </div>\n      <p>\n        <span className=\"text-gray-500\">#{pokemonId}</span>{\" \"}\n        {capitalize(pokemonName)}\n      </p>\n    </section>\n  ) : (\n    <></>\n  );\n};\n\nexport default PokeListItem;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport PokeDetail from \"../PokeDetail/PokeDetail\";\nimport PokeListItem from \"../PokeListItem/PokeListItem\";\nimport { BASE_URL, NUMBER_OF_POKEMON_TOTAL, BasicPokemon } from \"../utils\";\n\ninterface Props {\n  searchText: string;\n}\n\nconst PokeList = ({ searchText }: Props): ReactElement => {\n  const [pokemonList, setPokemonList] = useState<BasicPokemon[]>([]);\n  const [selectedPokemon, setSelectedPokemon] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    fetch(`${BASE_URL}pokemon?limit=${NUMBER_OF_POKEMON_TOTAL}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokemonList(data.results);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const listPokemon = pokemonList.map((pokemon, index) => (\n    <PokeListItem\n      key={pokemon.name}\n      pokemonName={pokemon.name}\n      pokemonNumber={index + 1}\n      selectedPokemon={selectedPokemon}\n      setSelectedPokemon={setSelectedPokemon}\n      searchText={searchText}\n    />\n  ));\n\n  return isLoading ? (\n    <img\n      src={process.env.PUBLIC_URL + \"/logo192.png\"}\n      alt=\"Loading...\"\n      className=\"animate-spin m-auto py-40\"\n    ></img>\n  ) : (\n    <div className=\"grid grid-cols-2 gap-4 pt-8 px-4 md:grid-cols-3 lg:grid-cols-4\">\n      {/**\n       * @todo Move PokeDetail up to App.\n       */}\n      {selectedPokemon !== 0 ? (\n        <PokeDetail pokemonNumber={selectedPokemon} />\n      ) : null}\n      {listPokemon}\n    </div>\n  );\n};\n\nexport default PokeList;\n","import React, { ReactElement } from \"react\";\n\ntype SetSearchText = (text: string) => void;\n\ninterface Props {\n  setSearchText: SetSearchText;\n}\n\nconst PokeSearch = ({ setSearchText }: Props): ReactElement => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  return (\n    <form className=\"my-0 mx-auto flex justify-center items-center\">\n      <label className=\"text-gray-500 font-bold pr-3\">\n        Search for a pokémon!\n      </label>\n      <input\n        className=\"bg-gray-200 border-2 border-gray-200 rounded-md text-gray-700 px-2 focus:outline-none focus:border-purple-500 leading-tight py-2\"\n        type=\"text\"\n        placeholder=\"Pikachu\"\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      ></input>\n    </form>\n  );\n};\n\nexport default PokeSearch;\n","import React, { ReactElement, useState } from \"react\";\nimport PokeHeader from \"./PokeHeader/PokeHeader\";\nimport PokeList from \"./PokeList/PokeList\";\nimport PokeSearch from \"./PokeSearch/PokeSearch\";\n\nfunction App(): ReactElement {\n  const [searchText, setSearchText] = useState<string>(\"\");\n  return (\n    <main>\n      <PokeHeader />\n      <PokeSearch setSearchText={setSearchText} />\n      <PokeList searchText={searchText.toLowerCase()} />\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}