{"version":3,"sources":["PokeHeader/PokeHeader.tsx","utils.tsx","PokeDetail/PokeDetail.tsx","PokeListItem/PokeListItem.tsx","PokeList/PokeList.tsx","PokeSearch/PokeSearch.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PokeHeader","BASE_URL","PokeDetail","pokemonNumber","useState","pokemonName","setPokemonName","pokemonSpriteUrl","setPokeSpriteUrl","useEffect","fetch","then","response","json","data","sprites","front_default","name","PokeListItem","pokemonUrl","selectedPokemon","setSelectedPokemon","searchText","pokemonSpriteURL","setPokemonSpriteURL","pokemonId","setPokemonId","id","text","includes","href","length","toUpperCase","slice","toLowerCase","src","alt","onClick","PokeList","pokemonList","setPokemonList","results","listPokemon","map","pokemon","index","url","PokeSearch","setSearchText","type","onChange","e","target","value","handleChange","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAMeA,EAJI,WACjB,OAAO,iDCHIC,EAAW,6BC2BTC,EApBI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,cACpB,EAAsCC,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA6CF,mBAAiB,IAA9D,mBAAOG,EAAP,KAAyBC,EAAzB,KAWA,OATAC,qBAAU,WACRC,MAAM,GAAD,OAAIT,EAAJ,mBAAuBE,IACzBQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLN,EAAiBM,EAAKC,QAAQC,eAC9BV,EAAeQ,EAAKG,WAEvB,CAACd,IAGF,gCACGE,EADH,MACmBE,MCsCRW,EA9CM,SAAC,GAOM,IAN1Bb,EAMyB,EANzBA,YACAc,EAKyB,EALzBA,WACAhB,EAIyB,EAJzBA,cACAiB,EAGyB,EAHzBA,gBACAC,EAEyB,EAFzBA,mBACAC,EACyB,EADzBA,WAEA,EAAgDlB,mBAAiB,IAAjE,mBAAOmB,EAAP,KAAyBC,EAAzB,KACA,EAAkCpB,mBAAiBD,GAAnD,mBAAOsB,EAAP,KAAkBC,EAAlB,KAEAjB,qBAAU,WACRC,MAAM,GAAD,OAAIT,EAAJ,mBAAuBE,IACzBQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLU,EAAoBV,EAAKC,QAAQC,eACjCU,EAAaZ,EAAKa,SAErB,IAEH,IFXyBC,EEiBzB,OAAOvB,EAAYwB,SAASP,GAC1B,gCACE,4BACE,oBAAGQ,KAAMX,EAAT,cACIM,EADJ,MFpBmBG,EEqBSvB,EFpBrB,KAATuB,EAAoB,GACJ,IAAhBA,EAAKG,OAAqBH,EAAKI,cAEjCJ,EAAKK,MAAM,EAAG,GAAGD,cAAgBJ,EAAKK,MAAM,EAAGL,EAAKG,QAAQG,oBEoBzDX,EACC,qBACEY,IAAKZ,EACLa,IAAK/B,EACLgC,QAjBY,WAEdhB,EADJD,IAAoBjB,EACG,EACAA,MAgBjB,QAGN,8BCbWmC,EAlCE,SAAC,GAAyC,IAAvChB,EAAsC,EAAtCA,WAClB,EAAsClB,mBAAyB,IAA/D,mBAAOmC,EAAP,KAAoBC,EAApB,KACA,EAA8CpC,mBAAiB,GAA/D,mBAAOgB,EAAP,KAAwBC,EAAxB,KAEAZ,qBAAU,WACRC,MAAM,GAAD,OAAIT,EAAJ,yBHb8B,MGchCU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL0B,EAAe1B,EAAK2B,cAEvB,IAEH,IAAMC,EAAcH,EAAYI,KAAI,SAACC,EAASC,GAAV,OAClC,cAAC,EAAD,CAEExC,YAAauC,EAAQ3B,KACrBE,WAAYyB,EAAQE,IACpB3C,cAAe0C,EAAQ,EACvBzB,gBAAiBA,EACjBC,mBAAoBA,EACpBC,WAAYA,GANPsB,EAAQ3B,SAUjB,OACE,gCACuB,IAApBG,EACC,cAAC,EAAD,CAAYjB,cAAeiB,IACzB,KACHsB,MCbQK,EAjBI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,cAKpB,OACE,8BACE,uBACEC,KAAK,OACLC,SAAU,SAACC,IARI,SAACA,GACpBH,EAAcG,EAAEC,OAAOC,OAQjBC,CAAaH,SCDRI,MAXf,WACE,MAAoCnD,mBAAiB,IAArD,mBAAOkB,EAAP,KAAmB0B,EAAnB,KACA,OACE,sBAAKQ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYR,cAAeA,IAC3B,cAAC,EAAD,CAAU1B,WAAYA,EAAWY,oBCExBuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d42e83c6.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\n\nconst PokeHeader = (): ReactElement => {\n  return <header>Pok√©dex</header>;\n};\n\nexport default PokeHeader;\n","export const BASE_URL = \"https://pokeapi.co/api/v2/\";\nexport const NUMBER_OF_POKEMON_TOTAL = 898;\nexport const NUMBER_OF_POKEMON_GEN1 = 151;\nexport const NUMBER_OF_POKEMON_GEN2 = 100;\nexport const NUMBER_OF_POKEMON_GEN3 = 135;\nexport const NUMBER_OF_POKEMON_GEN4 = 107;\nexport const NUMBER_OF_POKEMON_GEN5 = 156;\nexport const NUMBER_OF_POKEMON_GEN6 = 72;\nexport const NUMBER_OF_POKEMON_GEN7 = 88;\nexport const NUMBER_OF_POKEMON_GEN8 = 89;\n\nexport interface BasicPokemon {\n  name: string;\n  url: string;\n}\n\n/**\n * Capitalizes a string by uppercasing the first letter and\n * lowercasing the rest. Returns an empty string if given\n * an empty string.\n * @param text A word or string to be capitalized.\n * @returns A capitalized version of the input string.\n */\nexport const capitalize = (text: string): string => {\n  if (text === \"\") return \"\";\n  if (text.length === 1) return text.toUpperCase();\n  return (\n    text.slice(0, 1).toUpperCase() + text.slice(1, text.length).toLowerCase()\n  );\n};\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { BASE_URL } from \"../utils\";\n\ninterface Props {\n  pokemonNumber: number;\n}\n\nconst PokeDetail = ({ pokemonNumber }: Props): ReactElement => {\n  const [pokemonName, setPokemonName] = useState<string>(\"\");\n  const [pokemonSpriteUrl, setPokeSpriteUrl] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetch(`${BASE_URL}pokemon/${pokemonNumber}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokeSpriteUrl(data.sprites.front_default);\n        setPokemonName(data.name);\n      });\n  }, [pokemonNumber]);\n\n  return (\n    <div>\n      {pokemonName} - {pokemonSpriteUrl}\n    </div>\n  );\n};\n\nexport default PokeDetail;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { BASE_URL, capitalize } from \"../utils\";\n\ntype SetSelectedPokemon = (pokemonNumber: number) => void;\n\ninterface Props {\n  pokemonName: string;\n  pokemonUrl: string;\n  pokemonNumber: number;\n  selectedPokemon: number;\n  setSelectedPokemon: SetSelectedPokemon;\n  searchText: string;\n}\n\nconst PokeListItem = ({\n  pokemonName,\n  pokemonUrl,\n  pokemonNumber,\n  selectedPokemon,\n  setSelectedPokemon,\n  searchText,\n}: Props): ReactElement => {\n  const [pokemonSpriteURL, setPokemonSpriteURL] = useState<string>(\"\");\n  const [pokemonId, setPokemonId] = useState<number>(pokemonNumber);\n\n  useEffect(() => {\n    fetch(`${BASE_URL}pokemon/${pokemonNumber}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokemonSpriteURL(data.sprites.front_default);\n        setPokemonId(data.id);\n      });\n  }, []);\n\n  const handleClick = () => {\n    selectedPokemon === pokemonNumber\n      ? setSelectedPokemon(0)\n      : setSelectedPokemon(pokemonNumber);\n  };\n\n  return pokemonName.includes(searchText) ? (\n    <div>\n      <p>\n        <a href={pokemonUrl}>\n          #{pokemonId}. {capitalize(pokemonName)}\n        </a>\n      </p>\n      {pokemonSpriteURL ? (\n        <img\n          src={pokemonSpriteURL}\n          alt={pokemonName}\n          onClick={handleClick}\n        ></img>\n      ) : null}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default PokeListItem;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport PokeDetail from \"../PokeDetail/PokeDetail\";\nimport PokeListItem from \"../PokeListItem/PokeListItem\";\nimport { BASE_URL, NUMBER_OF_POKEMON_TOTAL, BasicPokemon } from \"../utils\";\n\ninterface Props {\n  searchText: string;\n}\n\nconst PokeList = ({ searchText }: Props): ReactElement => {\n  const [pokemonList, setPokemonList] = useState<BasicPokemon[]>([]);\n  const [selectedPokemon, setSelectedPokemon] = useState<number>(0);\n\n  useEffect(() => {\n    fetch(`${BASE_URL}pokemon?limit=${NUMBER_OF_POKEMON_TOTAL}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokemonList(data.results);\n      });\n  }, []);\n\n  const listPokemon = pokemonList.map((pokemon, index) => (\n    <PokeListItem\n      key={pokemon.name}\n      pokemonName={pokemon.name}\n      pokemonUrl={pokemon.url}\n      pokemonNumber={index + 1}\n      selectedPokemon={selectedPokemon}\n      setSelectedPokemon={setSelectedPokemon}\n      searchText={searchText}\n    />\n  ));\n\n  return (\n    <div>\n      {selectedPokemon !== 0 ? (\n        <PokeDetail pokemonNumber={selectedPokemon} />\n      ) : null}\n      {listPokemon}\n    </div>\n  );\n};\n\nexport default PokeList;\n","import React, { ReactElement } from \"react\";\n\ntype SetSearchText = (text: string) => void;\n\ninterface Props {\n  setSearchText: SetSearchText;\n}\n\nconst PokeSearch = ({ setSearchText }: Props): ReactElement => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      ></input>\n    </div>\n  );\n};\n\nexport default PokeSearch;\n","import React, { ReactElement, useState } from \"react\";\nimport \"./App.css\";\nimport PokeHeader from \"./PokeHeader/PokeHeader\";\nimport PokeList from \"./PokeList/PokeList\";\nimport PokeSearch from \"./PokeSearch/PokeSearch\";\n\nfunction App(): ReactElement {\n  const [searchText, setSearchText] = useState<string>(\"\");\n  return (\n    <div className=\"App\">\n      <PokeHeader />\n      <PokeSearch setSearchText={setSearchText} />\n      <PokeList searchText={searchText.toLowerCase()} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}