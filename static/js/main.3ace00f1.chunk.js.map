{"version":3,"sources":["PokeHeader/PokeHeader.tsx","utils.tsx","PokeDetail/PokeDetail.tsx","PokeListItem/PokeListItem.tsx","PokeList/PokeList.tsx","PokeSearch/PokeSearch.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PokeHeader","className","BASE_URL","capitalize","text","length","toUpperCase","slice","toLowerCase","PokeDetail","pokemonNumber","isOpen","setIsOpen","useState","pokemonName","setPokemonName","pokemonSpriteUrl","setPokemonSpriteUrl","pokemonFlavorTexts","setPokemonFlavorTexts","pokemonGenus","setPokemonGenus","pokemonGeneration","setPokemonGeneration","pokemonHabitat","setPokemonHabitat","isLoading","setIsLoading","useEffect","fetch","then","response","json","data","sprites","front_default","name","flavor_text_entries","filter","entry","language","map","version","flavor_text","genera","genus","generation","split","habitat","appear","show","as","Fragment","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","src","process","alt","Title","type","onClick","PokeListItem","setSelectedPokemon","searchText","pokemonSpriteURL","setPokemonSpriteURL","pokemonId","setPokemonId","id","includes","PokeList","pokemonList","setPokemonList","selectedPokemon","results","listPokemon","pokemon","index","PokeSearch","setSearchText","placeholder","onChange","e","target","value","handleChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ace00f1.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\n\nconst PokeHeader = (): ReactElement => {\n  return (\n    <header className=\"text-4xl text-center py-6\">\n      <h1>Pok√©dex</h1>\n    </header>\n  );\n};\n\nexport default PokeHeader;\n","export const BASE_URL = \"https://pokeapi.co/api/v2/\";\nexport const NUMBER_OF_POKEMON_TOTAL = 898;\nexport const NUMBER_OF_POKEMON_GEN1 = 151;\nexport const NUMBER_OF_POKEMON_GEN2 = 100;\nexport const NUMBER_OF_POKEMON_GEN3 = 135;\nexport const NUMBER_OF_POKEMON_GEN4 = 107;\nexport const NUMBER_OF_POKEMON_GEN5 = 156;\nexport const NUMBER_OF_POKEMON_GEN6 = 72;\nexport const NUMBER_OF_POKEMON_GEN7 = 88;\nexport const NUMBER_OF_POKEMON_GEN8 = 89;\n\nexport interface BasicPokemon {\n  name: string;\n  url: string;\n}\n\n/**\n * Capitalizes a string by uppercasing the first letter and\n * lowercasing the rest. Returns an empty string if given\n * an empty string.\n * @param text A word or string to be capitalized.\n * @returns A capitalized version of the input string.\n */\nexport const capitalize = (text: string): string => {\n  if (text === \"\") return \"\";\n  if (text.length === 1) return text.toUpperCase();\n  return (\n    text.slice(0, 1).toUpperCase() + text.slice(1, text.length).toLowerCase()\n  );\n};\n","import React, { Fragment, ReactElement, useEffect, useState } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { BASE_URL, capitalize } from \"../utils\";\n\ntype SetIsOpen = (isOpen: boolean) => void;\n\ninterface Props {\n  pokemonNumber: number;\n  isOpen: boolean;\n  setIsOpen: SetIsOpen;\n}\n\ninterface FlavorTextEntry {\n  flavor_text: string;\n  language: Record<string, string>;\n  version: Record<string, string>;\n}\n\ninterface FlavorText {\n  version: string;\n  text: string;\n}\n\nconst PokeDetail = ({\n  pokemonNumber,\n  isOpen,\n  setIsOpen,\n}: Props): ReactElement => {\n  const [pokemonName, setPokemonName] = useState<string>(\"\");\n  const [pokemonSpriteUrl, setPokemonSpriteUrl] = useState<string>(\"\");\n  const [pokemonFlavorTexts, setPokemonFlavorTexts] = useState<FlavorText[]>(\n    []\n  );\n  const [pokemonGenus, setPokemonGenus] = useState<string>(\"\");\n  const [pokemonGeneration, setPokemonGeneration] = useState<string>(\"\");\n  const [pokemonHabitat, setPokemonHabitat] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`${BASE_URL}pokemon/${pokemonNumber}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokemonSpriteUrl(data.sprites.front_default);\n        setPokemonName(data.name);\n      });\n    fetch(`${BASE_URL}pokemon-species/${pokemonNumber}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokemonFlavorTexts(\n          data.flavor_text_entries\n            .filter((entry: FlavorTextEntry) => entry.language.name === \"en\")\n            .map((entry: FlavorTextEntry) => ({\n              version: entry.version.name,\n              text: entry.flavor_text,\n            }))\n        );\n        setPokemonGenus(\n          data.genera.filter(\n            (entry: FlavorTextEntry) => entry.language.name === \"en\"\n          )[0].genus\n        );\n        setPokemonGeneration(data.generation.name.split(\"-\")[1].toUpperCase());\n        data.habitat && data.habitat.name\n          ? setPokemonHabitat(data.habitat.name)\n          : setPokemonHabitat(\"N/A\");\n        setIsLoading(false);\n      });\n  }, [pokemonNumber]);\n\n  return (\n    <Transition appear show={isOpen} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        onClose={() => setIsOpen(false)}\n        className=\"fixed inset-0 z-10 overflow-y-auto flex justify-center items-center\"\n      >\n        <div className=\"min-h-screen px-4 text-left\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-black bg-opacity-30\" />\n          </Transition.Child>\n          <span\n            className=\"inline-block h-screen align-middle\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 scale-95\"\n            enterTo=\"opacity-100 scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 scale-100\"\n            leaveTo=\"opacity-0 scale-95\"\n          >\n            <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\n              {isLoading ? (\n                <img\n                  src={process.env.PUBLIC_URL + \"/logo64.png\"}\n                  alt=\"Loading...\"\n                  className=\"animate-spin\"\n                ></img>\n              ) : (\n                <div>\n                  <Dialog.Title\n                    as=\"h3\"\n                    className=\"text-lg font-medium leading-6 text-gray-900\"\n                  >\n                    {capitalize(pokemonName)}, the {pokemonGenus}\n                  </Dialog.Title>\n                  <div className=\"mt-2 text-left flex flex-col justify-center items-center\">\n                    <img src={pokemonSpriteUrl}></img>\n                    {pokemonFlavorTexts.length > 0 ? (\n                      <p>{pokemonFlavorTexts[0].text}</p>\n                    ) : null}\n                    <p className=\"w-full pt-3\">\n                      Generation {pokemonGeneration}\n                    </p>\n                    <p className=\"w-full pt-3\">\n                      Habitat: {capitalize(pokemonHabitat)}\n                    </p>\n                  </div>\n                  <div className=\"mt-4\">\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                      onClick={() => setIsOpen(false)}\n                    >\n                      Close\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n};\n\nexport default PokeDetail;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport { BASE_URL, capitalize } from \"../utils\";\n\ntype SetSelectedPokemon = (pokemonNumber: number) => void;\ntype SetIsOpen = (isOpen: boolean) => void;\n\ninterface Props {\n  pokemonName: string;\n  pokemonNumber: number;\n  setSelectedPokemon: SetSelectedPokemon;\n  searchText: string;\n  setIsOpen: SetIsOpen;\n}\n\nconst PokeListItem = ({\n  pokemonName,\n  pokemonNumber,\n  setSelectedPokemon,\n  searchText,\n  setIsOpen,\n}: Props): ReactElement => {\n  const [pokemonSpriteURL, setPokemonSpriteURL] = useState<string>(\"\");\n  const [pokemonId, setPokemonId] = useState<number>(pokemonNumber);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    fetch(`${BASE_URL}pokemon/${pokemonNumber}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokemonSpriteURL(data.sprites.front_default);\n        setPokemonId(data.id);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const handleClick = () => {\n    setSelectedPokemon(pokemonNumber);\n    setIsOpen(true);\n  };\n\n  return isLoading ? (\n    <img\n      src={process.env.PUBLIC_URL + \"/logo64.png\"}\n      alt=\"Loading...\"\n      className=\"animate-spin\"\n    ></img>\n  ) : pokemonName.includes(searchText) ? (\n    <section className=\"border-2 rounded-md shadow-md flex justify-center flex-col items-center hover:border-purple-500 transition-colors\">\n      <div className=\"relative w-28 h-28 flex justify-center items-center\">\n        <div className=\"w-24 h-24 rounded-full bg-gray-200 absolute\"></div>\n        {pokemonSpriteURL ? (\n          <img\n            src={pokemonSpriteURL}\n            alt={pokemonName}\n            onClick={handleClick}\n            className=\"absolute w-24 h-24\"\n          ></img>\n        ) : null}\n      </div>\n      <p>\n        <span className=\"text-gray-500\">#{pokemonId}</span>{\" \"}\n        {capitalize(pokemonName)}\n      </p>\n    </section>\n  ) : (\n    <></>\n  );\n};\n\nexport default PokeListItem;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport PokeDetail from \"../PokeDetail/PokeDetail\";\nimport PokeListItem from \"../PokeListItem/PokeListItem\";\nimport { BASE_URL, NUMBER_OF_POKEMON_TOTAL, BasicPokemon } from \"../utils\";\n\ninterface Props {\n  searchText: string;\n}\n\nconst PokeList = ({ searchText }: Props): ReactElement => {\n  const [pokemonList, setPokemonList] = useState<BasicPokemon[]>([]);\n  const [selectedPokemon, setSelectedPokemon] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    fetch(`${BASE_URL}pokemon?limit=${NUMBER_OF_POKEMON_TOTAL}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setPokemonList(data.results);\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    selectedPokemon !== 0 ? setIsOpen(true) : setIsOpen(false);\n  }, [selectedPokemon]);\n\n  const listPokemon = pokemonList.map((pokemon, index) => (\n    <PokeListItem\n      key={pokemon.name}\n      pokemonName={pokemon.name}\n      pokemonNumber={index + 1}\n      setSelectedPokemon={setSelectedPokemon}\n      searchText={searchText}\n      setIsOpen={setIsOpen}\n    />\n  ));\n\n  return isLoading ? (\n    <img\n      src={process.env.PUBLIC_URL + \"/logo192.png\"}\n      alt=\"Loading...\"\n      className=\"animate-spin m-auto py-40\"\n    ></img>\n  ) : (\n    <div>\n      {selectedPokemon !== 0 ? (\n        <PokeDetail\n          pokemonNumber={selectedPokemon}\n          isOpen={isOpen}\n          setIsOpen={setIsOpen}\n        />\n      ) : null}\n      <div className=\"grid grid-cols-2 gap-4 pt-8 px-4 md:grid-cols-3 lg:grid-cols-6\">\n        {listPokemon}\n      </div>\n    </div>\n  );\n};\n\nexport default PokeList;\n","import React, { ReactElement } from \"react\";\n\ntype SetSearchText = (text: string) => void;\n\ninterface Props {\n  setSearchText: SetSearchText;\n}\n\nconst PokeSearch = ({ setSearchText }: Props): ReactElement => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  };\n\n  return (\n    <form className=\"my-0 mx-auto flex justify-center items-center\">\n      <label className=\"text-gray-500 font-bold pr-3\">\n        Search for a pok√©mon!\n      </label>\n      <input\n        className=\"bg-gray-200 border-2 border-gray-200 rounded-md text-gray-700 px-2 focus:outline-none focus:border-purple-500 leading-tight py-2\"\n        type=\"text\"\n        placeholder=\"Pikachu\"\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      ></input>\n    </form>\n  );\n};\n\nexport default PokeSearch;\n","import React, { ReactElement, useState } from \"react\";\nimport PokeHeader from \"./PokeHeader/PokeHeader\";\nimport PokeList from \"./PokeList/PokeList\";\nimport PokeSearch from \"./PokeSearch/PokeSearch\";\n\nfunction App(): ReactElement {\n  const [searchText, setSearchText] = useState<string>(\"\");\n  return (\n    <main>\n      <PokeHeader />\n      <PokeSearch setSearchText={setSearchText} />\n      <PokeList searchText={searchText.toLowerCase()} />\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}